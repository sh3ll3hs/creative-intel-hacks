import createClient, { type Middleware } from "openapi-fetch";

import type { paths } from "@/types/schema.gen"; // generated by openapi-typescript

const apiClient = createClient<paths>({
    baseUrl: process.env.NEXT_PUBLIC_API_URL || "http://localhost:8000",
});

export function formDataSerializer<T extends Record<string, string | Blob>>(
    data: T
): FormData {
    const formData = new FormData();

    for (const [key, value] of Object.entries(data)) {
        if (value instanceof Blob) {
            formData.set(key, value);
        } else {
            formData.set(key, value);
        }
    }

    return formData;
}

export default apiClient;
